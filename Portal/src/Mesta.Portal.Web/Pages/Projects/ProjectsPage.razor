@page "/projects"
@rendermode @(new InteractiveServerRenderMode(prerender: false))
@attribute [StreamRendering]
@attribute [Authorize]

<PageTitle>Dine prosjekter</PageTitle>

<h1>Dine prosjekter</h1>
<hr />
@if (ProjectList == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <MestaTable>
        <HeaderContent>
            <MestaTableHeader>Nr.</MestaTableHeader>
            <MestaTableHeader>Description</MestaTableHeader>
        </HeaderContent>

        <ChildContent>
            @foreach (var project in ProjectList)
            {
                <MestaTableRow TItem="Project" Item="project">
                    <ChildContent>
                        <MestaTableCell Label="ProjectNumber">
                            <a href="@GetProjectUrl(project.Id)">@project.ProjectNumber</a>
                                </MestaTableCell>
                        <MestaTableCell Label="Description">
                            <a href="@GetProjectUrl(project.Id)">@project.Description</a>
                        </MestaTableCell>
                    </ChildContent>
                </MestaTableRow>
            }
        </ChildContent>
    </MestaTable>
}

@using Mesta.Portal.Web.Shared.Components.MestaTable
@using Mesta.ProjectManagement.Domain
@using Mesta.ProjectManagement.Features.Projects
@using Mesta.ProjectManagement.Features.Projects.Fetch
@using Microsoft.AspNetCore.Authorization

@inject NavigationManager NavigationManager
@inject FetchProjectsFeature FetchProjectsFeature;

@code {

    private IList<Project>? ProjectList;

    private string GetProjectUrl(Guid id) => $"/projects/{id}";

    protected override async Task OnInitializedAsync()
    {
        var response = await FetchProjectsFeature.Execute();
        if (response != null)
        {
            ProjectList = response.Projects;
        }
    }

}